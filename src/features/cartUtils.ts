/* eslint-disable @typescript-eslint/no-explicit-any */
import { CartItem } from '../shared/types/types'

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–∑–∏–Ω–æ–π
export const cartUtils = {
  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage
  getCart: (): CartItem[] => {
    try {
      const cart = localStorage.getItem('cart')
      return cart ? JSON.parse(cart) : []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error)
      return []
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏
  showCart: (): void => {
    const cart = cartUtils.getCart()
    const comment = cartUtils.getOrderComment()
    const status = cartUtils.getOrderStatus()
    const booking = cartUtils.getBookingData()
    const history = cartUtils.getOrderHistory()

    console.group('üõí –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö')

    // –¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑
    console.group('üìã –¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑')

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
    console.group('üìÖ –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
    console.log(`–î–∞—Ç–∞: ${booking.date}`)
    console.log(`–í—Ä–µ–º—è: ${booking.time}`)
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π: ${booking.persons}`)
    console.groupEnd()

    // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
    console.group('üçΩÔ∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã')
    if (cart.length === 0) {
      console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')
    } else {
      cart.forEach((item, index) => {
        console.log(`${index + 1}. ${item.name} - ${item.quantity} —à—Ç. - ${item.totalPrice} ‚ÇΩ`)
      })

      const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0)
      const totalPrice = cart.reduce((sum, item) => sum + item.totalPrice, 0)

      console.log(`–ò—Ç–æ–≥–æ: ${totalItems} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—É–º–º—É ${totalPrice} ‚ÇΩ`)
    }
    console.groupEnd()

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if (comment) {
      console.log(`üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: "${comment}"`)
    }

    console.log(`üìã –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: ${status}`)
    console.log(`‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω: ${cartUtils.isOrderSubmitted() ? '–î–ê' : '–ù–ï–¢'}`)

    console.groupEnd()

    // –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤
    if (history.length > 0) {
      console.group('üìö –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤')

      const currentOrders = history.filter(order => order.status === 'submitted')
      const cancelledOrders = history.filter(order => order.status === 'cancelled')
      const completedOrders = history.filter(order => order.status === 'completed')

      if (currentOrders.length > 0) {
        console.group(`üìã –¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã (${currentOrders.length})`)
        currentOrders.forEach((order, index) => {
          console.log(`${index + 1}. –ó–∞–∫–∞–∑ #${order.id} - ${order.items.length} –±–ª—é–¥ - ${order.createdAt}`)
        })
        console.groupEnd()
      }

      if (cancelledOrders.length > 0) {
        console.group(`‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã (${cancelledOrders.length})`)
        cancelledOrders.forEach((order, index) => {
          console.log(`${index + 1}. –ó–∞–∫–∞–∑ #${order.id} - ${order.items.length} –±–ª—é–¥ - –ü—Ä–∏—á–∏–Ω–∞: ${order.cancelReason}`)
        })
        console.groupEnd()
      }

      if (completedOrders.length > 0) {
        console.group(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã (${completedOrders.length})`)
        completedOrders.forEach((order, index) => {
          console.log(`${index + 1}. –ó–∞–∫–∞–∑ #${order.id} - ${order.items.length} –±–ª—é–¥ - ${order.updatedAt}`)
        })
        console.groupEnd()
      }

      console.groupEnd()
    }

    console.groupEnd()
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
  clearCart: (): void => {
    localStorage.removeItem('cart')
    console.log('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞')
  },

  // –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
  getTotalItems: (): number => {
    const cart = cartUtils.getCart()
    return cart.reduce((sum, item) => sum + item.quantity, 0)
  },

  // –ü–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
  getTotalPrice: (): number => {
    const cart = cartUtils.getCart()
    return cart.reduce((sum, item) => sum + item.totalPrice, 0)
  },

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
  getOrderComment: (): string => {
    try {
      return localStorage.getItem('orderComment') || ''
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error)
      return ''
    }
  },

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
  setOrderComment: (comment: string): void => {
    try {
      localStorage.setItem('orderComment', comment)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error)
    }
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
  clearOrderComment: (): void => {
    try {
      localStorage.removeItem('orderComment')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error)
    }
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –∑–∞–∫–∞–∑ (–∫–æ—Ä–∑–∏–Ω–∞ + –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π)
  clearOrder: (): void => {
    cartUtils.clearCart()
    cartUtils.clearOrderComment()
    cartUtils.clearOrderStatus()
    console.log('–ó–∞–∫–∞–∑ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω')
  },

  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
  getOrderStatus: (): string => {
    try {
      return localStorage.getItem('orderStatus') || 'draft' // draft, submitted, confirmed, completed, cancelled
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞:', error)
      return 'draft'
    }
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
  setOrderStatus: (status: string): void => {
    try {
      localStorage.setItem('orderStatus', status)
      console.log(`–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${status}`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞:', error)
    }
  },

  // –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
  clearOrderStatus: (): void => {
    try {
      localStorage.removeItem('orderStatus')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞:', error)
    }
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –æ—Ñ–æ—Ä–º–ª–µ–Ω –ª–∏ –∑–∞–∫–∞–∑
  isOrderSubmitted: (): boolean => {
    const status = cartUtils.getOrderStatus()
    return status === 'submitted' || status === 'confirmed' || status === 'completed'
  },

  // –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
  submitOrder: (): void => {
    const cart = cartUtils.getCart()
    const comment = cartUtils.getOrderComment()

    if (cart.length === 0) {
      console.warn('–ù–µ–ª—å–∑—è –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—É—Å—Ç–æ–π –∑–∞–∫–∞–∑')
      return
    }

    cartUtils.setOrderStatus('submitted')
    cartUtils.clearOrderComment()

    console.log('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!')
    console.log(`–¢–æ–≤–∞—Ä–æ–≤: ${cart.length}`)
    console.log(`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}`)
  },

  // –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  getBookingData: (): { date: string; time: string; persons: number } => {
    try {
      return {
        date: localStorage.getItem('bookingDate') || new Date().toISOString().split('T')[0],
        time: localStorage.getItem('bookingTime') || '10:30',
        persons: parseInt(localStorage.getItem('bookingPersons') || '4')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
      return {
        date: new Date().toISOString().split('T')[0],
        time: '10:30',
        persons: 4
      }
    }
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  setBookingData: (date: string, time: string, persons: number): void => {
    try {
      localStorage.setItem('bookingDate', date)
      localStorage.setItem('bookingTime', time)
      localStorage.setItem('bookingPersons', persons.toString())
      console.log(`–î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ${date} ${time}, ${persons} —á–µ–ª.`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
    }
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  clearBookingData: (): void => {
    try {
      localStorage.removeItem('bookingDate')
      localStorage.removeItem('bookingTime')
      localStorage.removeItem('bookingPersons')
      console.log('–î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—á–∏—â–µ–Ω—ã')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
    }
  },



  // –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤
  getOrderHistory: (): any[] => {
    try {
      const history = localStorage.getItem('orderHistory')
      return history ? JSON.parse(history) : []
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤:', error)
      return []
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É
  getOrdersByStatus: (status: 'submitted' | 'cancelled' | 'completed'): any[] => {
    try {
      const history = cartUtils.getOrderHistory()
      return history.filter(order => order.status === status)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É:', error)
      return []
    }
  },

  // –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑
  cancelCurrentOrder: (reason: string): void => {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏–∏
      const submittedOrders = cartUtils.getOrdersByStatus('submitted')

      if (submittedOrders.length > 0) {
        // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
        const lastSubmittedOrder = submittedOrders.sort((a, b) =>
          new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
        )[0]

        // –°–æ–∑–¥–∞–µ–º –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–≥–æ
        const cancelledOrder = {
          ...lastSubmittedOrder,
          id: Date.now().toString(),
          status: 'cancelled',
          cancelReason: reason,
          updatedAt: new Date().toISOString()
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏—Å—Ç–æ—Ä–∏—é
        const existingHistory = localStorage.getItem('orderHistory')
        const history = existingHistory ? JSON.parse(existingHistory) : []

        // –£–¥–∞–ª—è–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
        const updatedHistory = history.filter((order: any) => order.id !== lastSubmittedOrder.id)

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
        updatedHistory.push(cancelledOrder)

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
        localStorage.setItem('orderHistory', JSON.stringify(updatedHistory))

        console.log(`–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`)
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
        const cart = cartUtils.getCart()
        const comment = cartUtils.getOrderComment()
        const booking = cartUtils.getBookingData()

        if (cart.length === 0) {
          console.warn('–ù–µ—Ç –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã')
          return
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π
        const order = {
          id: Date.now().toString(),
          items: cart,
          comment,
          booking,
          status: 'cancelled',
          cancelReason: reason,
          createdAt: new Date().toISOString(),
          updatedAt: new Date().toISOString()
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏—Å—Ç–æ—Ä–∏—é
        const existingHistory = localStorage.getItem('orderHistory')
        const history = existingHistory ? JSON.parse(existingHistory) : []

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
        history.push(order)

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
        localStorage.setItem('orderHistory', JSON.stringify(history))

        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑
        cartUtils.clearCart()
        cartUtils.clearOrderComment()

        console.log(`–ó–∞–∫–∞–∑ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –æ—Ç–º–µ–Ω–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`)
      }

      // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
      cartUtils.setOrderStatus('draft')

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞:', error)
    }
  },

  // –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑
  completeOrder: (): void => {
    try {
      const cart = cartUtils.getCart()
      const comment = cartUtils.getOrderComment()
      const booking = cartUtils.getBookingData()

      if (cart.length === 0) {
        console.warn('–ù–µ—Ç –∑–∞–∫–∞–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è')
        return
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
      const order = {
        id: Date.now().toString(),
        items: cart,
        comment,
        booking,
        status: 'completed',
        cancelReason: null,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      }

      // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏—Å—Ç–æ—Ä–∏—é
      const existingHistory = localStorage.getItem('orderHistory')
      const history = existingHistory ? JSON.parse(existingHistory) : []

      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
      history.push(order)

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
      localStorage.setItem('orderHistory', JSON.stringify(history))

      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑
      cartUtils.clearCart()
      cartUtils.clearOrderComment()
      cartUtils.setOrderStatus('draft')

      console.log('–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error)
    }
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤
  clearOrderHistory: (): void => {
    try {
      localStorage.removeItem('orderHistory')
      console.log('–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –æ—á–∏—â–µ–Ω–∞')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤:', error)
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
  getTotalItemsCount: (): number => {
    try {
      const cart = cartUtils.getCart()
      return cart.reduce((sum, item) => sum + item.quantity, 0)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:', error)
      return 0
    }
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
  hasItems: (): boolean => {
    try {
      return cartUtils.getTotalItemsCount() > 0
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:', error)
      return false
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
  getLastSubmittedOrder: (): any | null => {
    try {
      const submittedOrders = cartUtils.getOrdersByStatus('submitted')
      if (submittedOrders.length === 0) return null

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ (—Å —Å–∞–º–æ–π –ø–æ–∑–¥–Ω–µ–π –¥–∞—Ç–æ–π)
      return submittedOrders.sort((a, b) =>
        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
      )[0]
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞:', error)
      return null
    }
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
  hasSubmittedOrders: (): boolean => {
    try {
      const submittedOrders = cartUtils.getOrdersByStatus('submitted')
      return submittedOrders.length > 0
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:', error)
      return false
    }
  }
}


